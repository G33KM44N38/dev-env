---
- name: My dev setup
  hosts: localhost
  tasks:

  - name: Install bash
    become: yes
    package:
      name: bash
      state: present

  - name: check if cargo is installed
    shell: command -v cargo
    register: cargo_exists
    ignore_errors: yes

  - name: Download Installer
    when: cargo_exists is failed
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
    tags:
      - rust

  - name: install rust/cargo
    when: cargo_exists is failed
    shell: /tmp/sh.rustup.rs -y
    tags:
      - rust

  - name: installing requirement tools linux
    tags:
      - neovim
      - fish
    become: yes
    vars:
      macos_dependencies:
        - ninja
        - libtool
        - cmake
        - pkg-config
        - gettext
        - curl
        - python3-pip
        - curl-ca-bundle  # Only needed for older macOS versions
      ubuntu_dependencies:
        - ninja-build
        - gettext
        - libtool-bin
        - cmake
        - g++
        - pkg-config
        - unzip
        - curl
        - python3-pip
    apt:
      name: "{{ ubuntu_dependencies }}"
      state: present
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

  - name: installing tools for macos
    tags:
      - neovim
    become: yes
    vars:
      homebrew_packages:
        - ninja
        - libtool
        - cmake
        - pkg-config
        - gettext
        - curl
        - brew
        - python3-pip
        - curl-ca-bundle  # Only needed for older macOS versions
    homebrew:
      name: "{{ homebrew_packages }}"
      state: present
    when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10

  - name: install fish for Debian-based OS
    become: yes
    apt:
      name: fish
      state: present
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
    tags:
      - fish

  - name: install fish for macOS
    become: yes
    homebrew:
      name: fish
      state: present
    when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10
    tags:
      - fish

  - name: Cloning .dotfiles
    git:
      repo: "https://github.com/G33KM44N38/dotfiles"
      dest: "~/.config/"
      update: yes
      clone: yes
      force: yes
    tags:
        - neovim
        - dotfiles

  - name: Download and install latest Neovim
    become: yes
    tags:
      - neovim
    block:
      - name: Install the requirement for neovim linux
        shell: >
          apt-get update &&\
          apt-get install ninja-build gettext cmake unzip curl
        args:
          warn: false
        when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      - name: Building Neovim Linux
        shell: >
          git clone https://github.com/neovim/neovim \
          cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo \
          git checkout stable \
          make install
        when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

      - name: Install the requirement for nvim macos
        shell: >
          brew install ninja cmake gettext curl
        when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10
      - name: install the latest version of neovim on macos
        shell: >
          git clone https://github.com/neovim/neovim \
          cd neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo \
          git checkout stable \
          sudo make install
        when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10

  - name: installing tmux
    become: yes
    vars:
      macos_packages:
        - tmux
      ubuntu_packages:
        - tmux
    block:
      - name: Install tmux on MacOS
        homebrew:
          name: "{{ macos_packages }}"
          state: present
        when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10
      - name: Install tmux on Linux
        apt:
          name: "{{ ubuntu_packages }}"
          state: present
        when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

  - name: Install Packer
    git:
      repo: "https://github.com/wbthomason/packer.nvim"
      dest: "{{ lookup('env', 'LOCALAPPDATA') }}/nvim-data/site/pack/packer/start/packer.nvim"
      force: yes
    when: ansible_os_family == 'Darwin' or ansible_os_family == 'Linux'

  - name: install NPM
    block:
      - name: Install npm on linux
        shell: >
          sudo apt-get update
          sudo apt-get install nodejs npm
        when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
      - name: Install npm on macos
        shell: >
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" \
          brew update \
          brew install npm
        when: ansible_distribution == 'MacOSX' and ansible_distribution_version.major >= 10

